<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Scans within the base package of the application for @Components to configure as beans -->
    <!-- @Controller, @Service, @Configuration, etc. -->
    <context:component-scan base-package="com.slevenc.ccms"/>

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:resources mapping="/res/**" location="/res/"/>
    <mvc:annotation-driven/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    -->


    <bean id="entityClassFinder" class="com.slevenc.ccms.util.factory.ClassFinderFactory">
        <property name="annotationClass">
            <value>javax.persistence.Entity</value>
        </property>
        <property name="packageToScan">
            <value>com.slevenc.ccms.entity</value>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    </bean>

    <bean id="freemarkerConfig" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:freemarker.properties"/>
    </bean>
    <bean id="freemarkerViewConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="freemarkerSettings" ref="freemarkerConfig"/>
        <property name="templateLoaderPath">
            <value>/WEB-INF/ftl/</value>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
    </bean>

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="viewNames" value="*.ftl"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=""/>
        <property name="order" value="2"/>
    </bean>


    <bean id="sf" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="configLocation" value="classpath:userDb.h.cfg.xml"/>
        <property name="annotatedClasses" ref="entityClassFinder">
        </property>
    </bean>


    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sf"/>
        </property>
    </bean>

    <bean id="loginFilterRegexMatcher" class="com.slevenc.ccms.util.regex.MatcherPatterns">
         <property name="onPatterns">
             <list>
                 <value>.*/article/.*</value>
             </list>
         </property>
         <property name="offPatterns">
             <list>
                 <value>.*/article/view/.*</value>
             </list>
         </property>

    </bean>
    <!--<aop:config>-->
        <!--&lt;!&ndash; 切入点指明了在执行Service的所有方法时产生事务拦截操作 &ndash;&gt;-->
        <!--<aop:pointcut id="daoMethods"-->
                      <!--expression="execution(* com.slevenc.ccms.service.*.*(..))"/>-->
        <!--&lt;!&ndash; 定义了将采用何种拦截操作，这里引用到 txAdvice &ndash;&gt;-->
        <!--<aop:advisor advice-ref="txAd" pointcut-ref="daoMethods"/>-->
    <!--</aop:config>-->
    <!--<tx:advice id="txAd" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>-->
            <!--<tx:method name="save*" rollback-for="Exception"/>-->
            <!--<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>-->
            <!--<tx:method name="*" read-only="true" rollback-for="Exception"/>-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->
</beans>
